(function(e,d){typeof exports=="object"&&typeof module<"u"?module.exports=d(require("vue"),require("../injectionKeys.ts")):typeof define=="function"&&define.amd?define(["vue","../injectionKeys.ts"],d):(e=typeof globalThis<"u"?globalThis:e||self,e.StreamsyncCustomComponentTemplates=d(e.vue,e.injectionKeys))})(this,function(e,d){"use strict";var a=(t=>(t.Text="Text",t.KeyValue="Key-Value",t.Color="Color",t.Shadow="Shadow",t.Number="Number",t.Object="Object",t.IdKey="Identifying Key",t))(a||{}),o=(t=>(t.General="General",t.Style="Style",t))(o||{}),h=(t=>(t.Text="Text",t.Textarea="Textarea",t))(h||{});const v=t=>(e.pushScopeId("data-v-c47a5383"),t=t(),e.popScopeId(),t),E={class:"BubbleMessage"},V=v(()=>e.createElementVNode("div",{class:"triangle"},null,-1)),I={class:"message"},w={streamsync:{name:"Bubble Message",description:"Shows a message in the shape of a speech bubble.",category:"Content",fields:{text:{name:"Text",type:a.Text}},previewField:"text"}},B=e.defineComponent({...w,__name:"BubbleMessage",setup(t){const n=e.inject(d.evaluatedFields);return(s,l)=>(e.openBlock(),e.createElementBlock("div",E,[V,e.createElementVNode("div",I,e.toDisplayString(e.unref(n).text.value),1)]))}}),le="",_=(t,n)=>{const s=t.__vccOpts||t;for(const[l,p]of n)s[l]=p;return s},N=_(B,[["__scopeId","data-v-c47a5383"]]);a.Color,o.Style;const T={name:"Primary text",type:a.Color,category:o.Style,applyStyleVariable:!0};a.Color,o.Style,a.Color,o.Style;const k={name:"Container background",type:a.Color,category:o.Style,applyStyleVariable:!0};a.Shadow,o.Style;const M={name:"Separator",type:a.Color,category:o.Style,applyStyleVariable:!0};a.Color,o.Style,a.Color,o.Style,a.Shadow,o.Style,a.Color,o.Style;const f={name:"Custom CSS classes",type:a.Text,category:o.Style,desc:"CSS classes, separated by spaces. You can define classes in custom stylesheets."},g=t=>(e.pushScopeId("data-v-026368bf"),t=t(),e.popScopeId(),t),$=g(()=>e.createElementVNode("div",{class:"triangle"},null,-1)),A={class:"message"},P={class:"text"},j=[g(()=>e.createElementVNode("i",{class:"ri-pushpin-line"},null,-1))],H=[g(()=>e.createElementVNode("i",{class:"ri-flag-line"},null,-1))],D=`This documentation will show in the collapsible mini-docs feature embedded in Builder.
You _can_ use **markdown**.`,O=`
def handle_flag(state, payload):
	state["flagged_message_id"] = payload`,q=`
def handle_pin(state, payload):
	state["pinned_message_id"] = payload`,z={streamsync:{name:"Bubble Message (Advanced)",description:"Shows a message in the shape of a speech bubble.",docs:D,category:"Content",fields:{messageId:{name:"Message id",desc:"Unique id to identify the message when generating events.",init:"a1",type:a.Text},text:{name:"Text",desc:"The message to be displayed.",default:"(Empty message)",type:a.Text,control:h.Textarea},orientation:{name:"Orientation",category:o.Style,type:a.Text,options:{left:"Pointing left",right:"Pointing right"}},bubbleColor:{name:"Bubble",default:"#CFEFF3",category:o.Style,type:a.Color,applyStyleVariable:!0},primaryTextColor:T,separatorColor:M,containerBackgroundColor:k,cssClasses:f},events:{"pin-message":{desc:"Emitted when the pin button is clicked.",stub:q},"flag-message":{desc:"Emitted when the flag button is clicked.",stub:O}},previewField:"text"}},L=e.defineComponent({...z,__name:"BubbleMessageAdvanced",setup(t){const n=e.ref(null),s=e.inject(d.evaluatedFields),l=e.computed(()=>s.messageId.value);function p(){const u=l.value,m=new CustomEvent("flag-message",{detail:{payload:u}});n.value.dispatchEvent(m)}function r(){const u=l.value,m=new CustomEvent("pin-message",{detail:{payload:u}});n.value.dispatchEvent(m)}return(u,m)=>(e.openBlock(),e.createElementBlock("div",{class:e.normalizeClass(["BubbleMessage",{rightOriented:e.unref(s).orientation.value=="right"}]),ref_key:"rootEl",ref:n},[$,e.createElementVNode("div",A,[e.createElementVNode("div",P,e.toDisplayString(e.unref(s).text.value),1),e.createElementVNode("div",{class:"actions"},[e.createElementVNode("div",{class:"action",onClick:r},j),e.createElementVNode("div",{class:"action",onClick:p},H)])])],2))}}),de="",F=_(L,[["__scopeId","data-v-026368bf"]]);function b(t,n,s){const l=e.ref(),p=e.ref(!1),r=e.ref(null),u=e.computed(()=>t.getComponentById(n));function m(c,i,y){var x,C;l.value=c;const ae=(x=u.value.handlers)==null?void 0:x[i],ne=((C=u.value.binding)==null?void 0:C.eventType)==i;if(!ae&&!ne)return;if(p.value){r.value={eventValue:c,emitEventType:i};return}p.value=!0;const oe=()=>{p.value=!1,r.value&&(m(r.value.eventValue,r.value.emitEventType),r.value=null),y==null||y()},se=new CustomEvent(i,{detail:{payload:c,callback:oe}});s.value.dispatchEvent(se)}return e.watch(()=>t.getBindingValue(n),c=>{p.value||(l.value=c)},{immediate:!0}),e.watch(l,c=>{typeof c>"u"&&(l.value="")},{immediate:!0}),{formValue:l,handleInput:m}}const Y={class:"valueContainer"},G={class:"inputArea"},U=["value","min","max","step"],J="A user input component that allows users to select numeric values using a slider with optional constraints like min, max, and step.",K=`
def onchange_handler(state, payload):

	# Set the state variable "new_val" to the new value

	state["new_val"] = payload`,Q={streamsync:{name:"Slider Input Copy",description:J,category:"Input",fields:{label:{name:"Label",init:"Input Label",default:"dumb label",type:a.Text},minValue:{name:"Minimum value",type:a.Number,default:"0",init:"0"},maxValue:{name:"Maximum value",type:a.Number,default:"100",init:"100"},stepSize:{name:"Step size",type:a.Number,default:"1",init:"1"},cssClasses:f},events:{"ss-number-change":{desc:"Capture changes to this control.",stub:K,bindable:!0}}}},R=e.defineComponent({...Q,__name:"CoreSliderCopy",setup(t){const n=e.inject(d.evaluatedFields),s=e.ref(null),l=e.inject(d.core),p=e.inject(d.componentId),{formValue:r,handleInput:u}=b(l,p,s);return(m,c)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreSliderInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",null,e.toDisplayString(e.unref(n).label.value),1),e.createElementVNode("div",Y,[e.createElementVNode("h3",null,e.toDisplayString(e.unref(r)),1)]),e.createElementVNode("div",G,[e.createElementVNode("input",{type:"range",value:e.unref(r),onInput:c[0]||(c[0]=i=>e.unref(u)(i.target.value,"ss-number-change")),min:e.unref(n).minValue.value,max:e.unref(n).maxValue.value,step:e.unref(n).stepSize.value},null,40,U)])],512))}}),pe="",W=_(R,[["__scopeId","data-v-3ca30d5c"]]),X=["type","value","placeholder"],Z="A user input component that allows users to enter single-line text values.",S=`
def onchange_handler(state, payload):

	# Set the state variable "new_val" to the new value

	state["new_val"] = payload`,ee={streamsync:{name:"Custom Text Input",description:Z,category:"Input",fields:{label:{name:"Label",init:"Input Label",type:a.Text},placeholder:{name:"Placeholder",type:a.Text},passwordMode:{name:"Password mode",default:"no",type:a.Text,options:{no:"No",yes:"Yes"},category:o.Style},cssClasses:f},events:{"ss-change":{desc:"Capture changes as they happen.",stub:S,bindable:!0},"ss-change-finish":{desc:"Capture changes once this control has lost focus.",stub:S}}}},te=e.defineComponent({...ee,__name:"CoreTextInputCopy",setup(t){const n=e.inject(d.evaluatedFields),s=e.ref(null),l=e.inject(d.core),p=e.inject(d.componentId);function r(c,i){const y={value:c,componentId:n.label.value};console.log("customHandler payload: "),console.log(y),m(y,i)}const{formValue:u,handleInput:m}=b(l,p,s);return(c,i)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreTextInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",null,e.toDisplayString(e.unref(n).label.value),1),e.createElementVNode("input",{type:e.unref(n).passwordMode.value=="yes"?"password":"text",value:e.unref(u),onInput:i[0]||(i[0]=y=>r(y.target.value,"ss-change")),onChange:i[1]||(i[1]=y=>r(y.target.value,"ss-change-finish")),placeholder:e.unref(n).placeholder.value,"aria-autocomplete":"none"},null,40,X)],512))}}),ue="";return{bubblemessage:N,bubblemessageadvanced:F,coreslidercopy:W,coretextinputcopy:_(te,[["__scopeId","data-v-48a56e10"]])}});
