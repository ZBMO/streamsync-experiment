(function(e,d){typeof exports=="object"&&typeof module<"u"?module.exports=d(require("vue"),require("../injectionKeys.ts")):typeof define=="function"&&define.amd?define(["vue","../injectionKeys.ts"],d):(e=typeof globalThis<"u"?globalThis:e||self,e.StreamsyncCustomComponentTemplates=d(e.vue,e.injectionKeys))})(this,function(e,d){"use strict";var n=(t=>(t.Text="Text",t.KeyValue="Key-Value",t.Color="Color",t.Shadow="Shadow",t.Number="Number",t.Object="Object",t.IdKey="Identifying Key",t))(n||{}),r=(t=>(t.General="General",t.Style="Style",t))(r||{}),S=(t=>(t.Text="Text",t.Textarea="Textarea",t))(S||{});const $=t=>(e.pushScopeId("data-v-c47a5383"),t=t(),e.popScopeId(),t),N={class:"BubbleMessage"},M=$(()=>e.createElementVNode("div",{class:"triangle"},null,-1)),D={class:"message"},P={streamsync:{name:"Bubble Message",description:"Shows a message in the shape of a speech bubble.",category:"Content",fields:{text:{name:"Text",type:n.Text}},previewField:"text"}},O=e.defineComponent({...P,__name:"BubbleMessage",setup(t){const a=e.inject(d.evaluatedFields);return(s,c)=>(e.openBlock(),e.createElementBlock("div",N,[M,e.createElementVNode("div",D,e.toDisplayString(e.unref(a).text.value),1)]))}}),Ie="",y=(t,a)=>{const s=t.__vccOpts||t;for(const[c,p]of a)s[c]=p;return s},A=y(O,[["__scopeId","data-v-c47a5383"]]),L={name:"Accent",type:n.Color,category:r.Style,applyStyleVariable:!0},x={name:"Primary text",type:n.Color,category:r.Style,applyStyleVariable:!0},j={name:"Secondary text",type:n.Color,category:r.Style,applyStyleVariable:!0};n.Color,r.Style;const I={name:"Container background",type:n.Color,category:r.Style,applyStyleVariable:!0},F={name:"Container shadow",type:n.Shadow,category:r.Style,applyStyleVariable:!0},g={name:"Separator",type:n.Color,category:r.Style,applyStyleVariable:!0},E={name:"Button",type:n.Color,category:r.Style,applyStyleVariable:!0},w={name:"Button text",type:n.Color,category:r.Style,applyStyleVariable:!0},B={name:"Button shadow",type:n.Shadow,category:r.Style,applyStyleVariable:!0};n.Color,r.Style;const h={name:"Custom CSS classes",type:n.Text,category:r.Style,desc:"CSS classes, separated by spaces. You can define classes in custom stylesheets."},b=t=>(e.pushScopeId("data-v-026368bf"),t=t(),e.popScopeId(),t),H=b(()=>e.createElementVNode("div",{class:"triangle"},null,-1)),U={class:"message"},Y={class:"text"},q=[b(()=>e.createElementVNode("i",{class:"ri-pushpin-line"},null,-1))],z=[b(()=>e.createElementVNode("i",{class:"ri-flag-line"},null,-1))],G=`This documentation will show in the collapsible mini-docs feature embedded in Builder.
You _can_ use **markdown**.`,J=`
def handle_flag(state, payload):
	state["flagged_message_id"] = payload`,K=`
def handle_pin(state, payload):
	state["pinned_message_id"] = payload`,R={streamsync:{name:"Bubble Message (Advanced)",description:"Shows a message in the shape of a speech bubble.",docs:G,category:"Content",fields:{messageId:{name:"Message id",desc:"Unique id to identify the message when generating events.",init:"a1",type:n.Text},text:{name:"Text",desc:"The message to be displayed.",default:"(Empty message)",type:n.Text,control:S.Textarea},orientation:{name:"Orientation",category:r.Style,type:n.Text,options:{left:"Pointing left",right:"Pointing right"}},bubbleColor:{name:"Bubble",default:"#CFEFF3",category:r.Style,type:n.Color,applyStyleVariable:!0},primaryTextColor:x,separatorColor:g,containerBackgroundColor:I,cssClasses:h},events:{"pin-message":{desc:"Emitted when the pin button is clicked.",stub:K},"flag-message":{desc:"Emitted when the flag button is clicked.",stub:J}},previewField:"text"}},Q=e.defineComponent({...R,__name:"BubbleMessageAdvanced",setup(t){const a=e.ref(null),s=e.inject(d.evaluatedFields),c=e.computed(()=>s.messageId.value);function p(){const u=c.value,_=new CustomEvent("flag-message",{detail:{payload:u}});a.value.dispatchEvent(_)}function i(){const u=c.value,_=new CustomEvent("pin-message",{detail:{payload:u}});a.value.dispatchEvent(_)}return(u,_)=>(e.openBlock(),e.createElementBlock("div",{class:e.normalizeClass(["BubbleMessage",{rightOriented:e.unref(s).orientation.value=="right"}]),ref_key:"rootEl",ref:a},[H,e.createElementVNode("div",U,[e.createElementVNode("div",Y,e.toDisplayString(e.unref(s).text.value),1),e.createElementVNode("div",{class:"actions"},[e.createElementVNode("div",{class:"action",onClick:i},q),e.createElementVNode("div",{class:"action",onClick:p},z)])])],2))}}),ke="",W=y(Q,[["__scopeId","data-v-026368bf"]]),X={key:0},Z={streamsync:{name:"Section",description:"A container component that divides the layout into sections, with an optional title.",category:"Layout",allowedChildrenTypes:["*"],fields:{title:{name:"Title",init:"Section Title",desc:"Leave blank to hide.",type:n.Text},accentColor:L,primaryTextColor:x,secondaryTextColor:j,containerBackgroundColor:I,containerShadow:F,separatorColor:g,buttonColor:E,buttonTextColor:w,buttonShadow:B,snapMode:{name:"Snap mode",type:n.Text,options:{no:"No",yes:"Yes"},default:"no",init:"no",category:r.Style,desc:"Use as much space as possible without altering the size of the container."},cssClasses:h},previewField:"title"}},ee=e.defineComponent({...Z,__name:"CustomCoreSection",setup(t){const a=e.inject(d.core),s=e.inject(d.instancePath);function c(o){const l=o.target.closest("[data-streamsync-id]");var m=a.getComponentById(l.dataset.streamsyncId);console.log("target component: "),console.log(m);var f=m.content.customId,C=l.dataset.streamsyncId;return f!=""?f:C}function p(o,l){const m=o.target.nodeName;return l.includes(m)}function i(o){if(o.stopPropagation(),!p(o,["BUTTON"]))return;const l=c(o),m=new CustomEvent("click",{detail:{payload:{id:l}}});a.forwardEvent(m,s,!0)}function u(o){if(o.stopPropagation(),!p(o,["SELECT","INPUT"]))return;const l=c(o),m=o.target.value,f=new CustomEvent("change",{detail:{payload:{id:l,value:m}}});a.forwardEvent(f,s,!0)}const _=e.inject(d.evaluatedFields);return(o,l)=>(e.openBlock(),e.createElementBlock("section",{class:e.normalizeClass(["CoreSection",{snapMode:e.unref(_).snapMode.value=="yes"}]),ref:"rootEl",onClickCapture:i},[e.unref(_).title.value?(e.openBlock(),e.createElementBlock("h2",X,e.toDisplayString(e.unref(_).title.value)+" CUSTOM SECTION",1)):e.createCommentVNode("",!0),e.createElementVNode("div",{"data-streamsync-container":"",onChangeCapture:u},[e.renderSlot(o.$slots,"default",{},void 0,!0)],32)],34))}}),Ve="",te=y(ee,[["__scopeId","data-v-aec38c3b"]]);function ne(t){const a={ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey};return new CustomEvent("ss-click",{detail:{payload:a}})}const oe=["aria-disabled"],ae={streamsync:{name:"Button",description:"A standalone button component that can be linked to a click event handler.",docs:"\nStreamsync uses the library RemixIcon to display icons. To include an icon, check remixicon.com, find the icon's id (such as `arrow-up`) and it to your _Button_.\n",category:"Other",events:{"ss-click":{desc:"Capture single clicks.",stub:`
def handle_button_click(state):

	# Increment counter when the button is clicked

	state["counter"] += 1`.trim()}},fields:{text:{name:"Text",init:"Button Text",type:n.Text},customId:{name:"CustomId",init:"Button CustomId",type:n.Text},isDisabled:{name:"Disabled",default:"no",type:n.Text,options:{yes:"Yes",no:"No"},desc:"Disables all event handlers."},buttonColor:E,buttonTextColor:w,icon:{name:"Icon",type:n.Text,desc:'A RemixIcon id, such as "arrow-up".',category:r.Style},buttonShadow:B,separatorColor:g,cssClasses:h},previewField:"text"}},se=e.defineComponent({...ae,__name:"CustomCoreButton",setup(t){const a=e.ref(null),s=e.inject(d.evaluatedFields),c=e.inject(d.isDisabled);e.watch(s.isDisabled,i=>{c.value=i=="yes"},{immediate:!0});function p(i){const u=ne(i);a.value.dispatchEvent(u)}return(i,u)=>(e.openBlock(),e.createElementBlock("button",{class:"CoreButton","aria-disabled":e.unref(c),ref_key:"rootEl",ref:a,onClick:p},[e.unref(s).icon.value?(e.openBlock(),e.createElementBlock("i",{key:0,class:e.normalizeClass([`ri-${e.unref(s).icon.value}-line`,`ri-${e.unref(s).icon.value}`])},null,2)):e.createCommentVNode("",!0),e.createTextVNode(" "+e.toDisplayString(e.unref(s).text.value),1)],8,oe))}}),Me="",le=y(se,[["__scopeId","data-v-f19c8c2f"]]);function k(t,a,s){const c=e.ref(),p=e.ref(!1),i=e.ref(null),u=e.computed(()=>t.getComponentById(a));function _(o,l,m){var V,v;c.value=o;const f=(V=u.value.handlers)==null?void 0:V[l],C=((v=u.value.binding)==null?void 0:v.eventType)==l;if(!f&&!C)return;if(p.value){i.value={eventValue:o,emitEventType:l};return}p.value=!0;const Se=()=>{p.value=!1,i.value&&(_(i.value.eventValue,i.value.emitEventType),i.value=null),m==null||m()},xe=new CustomEvent(l,{detail:{payload:o,callback:Se}});s.value.dispatchEvent(xe)}return e.watch(()=>t.getBindingValue(a),o=>{p.value||(c.value=o)},{immediate:!0}),e.watch(c,o=>{typeof o>"u"&&(c.value="")},{immediate:!0}),{formValue:c,handleInput:_}}const ce={class:"mainLabel"},re={class:"selectContainer"},ie=["value"],de=["value"],pe="A user input component that allows users to select a single value from a list of options using a dropdown menu.",ue={a:"Option A",b:"Option B"},me=`
def onchange_handler(state, payload):

	# Set the state variable "selected" to the selected option

	state["selected"] = payload`,_e={streamsync:{name:"Dropdown Input",description:pe,category:"Input",fields:{label:{name:"Label",init:"Input Label",type:n.Text},customId:{name:"CustomId",init:"Dropdown CustomId",type:n.Text},options:{name:"Options",desc:"Key-value object with options. Must be a JSON string or a state reference to a dictionary.",type:n.KeyValue,default:JSON.stringify(ue,null,2)},cssClasses:h},events:{"ss-option-change":{desc:"Sent when the selected option changes.",stub:me.trim(),bindable:!0}}}},ye=e.defineComponent({..._e,__name:"CoreDropdownInput",setup(t){const a=e.inject(d.evaluatedFields),s=e.ref(null),c=e.inject(d.core),p=e.inject(d.instancePath),{formValue:i,handleInput:u}=k(c,p,s);return(_,o)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreDropdownInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",ce,e.toDisplayString(e.unref(a).label.value),1),e.createElementVNode("div",re,[e.createElementVNode("select",{value:e.unref(i),onInput:o[0]||(o[0]=l=>e.unref(u)(l.target.value,"ss-option-change"))},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(e.unref(a).options.value,(l,m)=>(e.openBlock(),e.createElementBlock("option",{key:m,value:m},e.toDisplayString(l),9,de))),128))],40,ie)])],512))}}),De="",fe=y(ye,[["__scopeId","data-v-8788e846"]]),he=["type","value","placeholder"],ge="A user input component that allows users to enter single-line text values.",T=`
def onchange_handler(state, payload):

	# Set the state variable "new_val" to the new value

	state["new_val"] = payload`,be={streamsync:{name:"Text Input",description:ge,category:"Input",fields:{label:{name:"Label",init:"Input Label",type:n.Text},customId:{name:"CustomId",init:"Input CustomId",type:n.Text},placeholder:{name:"Placeholder",type:n.Text},passwordMode:{name:"Password mode",default:"no",type:n.Text,options:{no:"No",yes:"Yes"},category:r.Style},cssClasses:h},events:{"ss-change":{desc:"Capture changes as they happen.",stub:T,bindable:!0},"ss-change-finish":{desc:"Capture changes once this control has lost focus.",stub:T}}}},Ce=e.defineComponent({...be,__name:"CoreTextInput",setup(t){const a=e.inject(d.evaluatedFields),s=e.ref(null),c=e.inject(d.core),p=e.inject(d.instancePath),{formValue:i,handleInput:u}=k(c,p,s);return(_,o)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreTextInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",null,e.toDisplayString(e.unref(a).label.value),1),e.createElementVNode("input",{type:e.unref(a).passwordMode.value=="yes"?"password":"text",value:e.unref(i),onInput:o[0]||(o[0]=l=>e.unref(u)(l.target.value,"ss-change")),onChange:o[1]||(o[1]=l=>e.unref(u)(l.target.value,"ss-change-finish")),placeholder:e.unref(a).placeholder.value,"aria-autocomplete":"none"},null,40,he)],512))}}),Pe="";return{bubblemessage:A,bubblemessageadvanced:W,customcoresection:te,customcorebutton:le,coredropdowninput:fe,coretextinput:y(Ce,[["__scopeId","data-v-ed58d12d"]])}});
