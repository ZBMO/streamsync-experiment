(function(e,u){typeof exports=="object"&&typeof module<"u"?module.exports=u(require("vue")):typeof define=="function"&&define.amd?define(["vue"],u):(e=typeof globalThis<"u"?globalThis:e||self,e.StreamsyncCustomComponentTemplates=u(e.vue))})(this,function(e){"use strict";const u={core:Symbol(),builderManager:Symbol(),evaluatedFields:Symbol(),componentId:Symbol(),isBeingEdited:Symbol(),isDisabled:Symbol(),getChildrenVNodes:Symbol(),renderProxiedComponent:Symbol(),instancePath:Symbol(),flattenedInstancePath:Symbol(),instanceData:Symbol()};var t=(n=>(n.Text="Text",n.KeyValue="Key-Value",n.Color="Color",n.Shadow="Shadow",n.Number="Number",n.Object="Object",n.IdKey="Identifying Key",n))(t||{}),r=(n=>(n.General="General",n.Style="Style",n))(r||{});const V={name:"Accent",type:t.Color,category:r.Style,applyStyleVariable:!0},v={name:"Primary text",type:t.Color,category:r.Style,applyStyleVariable:!0},D={name:"Secondary text",type:t.Color,category:r.Style,applyStyleVariable:!0};t.Color,r.Style;const N={name:"Container background",type:t.Color,category:r.Style,applyStyleVariable:!0},$={name:"Container shadow",type:t.Shadow,category:r.Style,applyStyleVariable:!0},x={name:"Separator",type:t.Color,category:r.Style,applyStyleVariable:!0},w={name:"Button",type:t.Color,category:r.Style,applyStyleVariable:!0},k={name:"Button text",type:t.Color,category:r.Style,applyStyleVariable:!0},E={name:"Button shadow",type:t.Shadow,category:r.Style,applyStyleVariable:!0};t.Color,r.Style;const g={name:"Custom CSS classes",type:t.Text,category:r.Style,desc:"CSS classes, separated by spaces. You can define classes in custom stylesheets."},j={key:0},P={streamsync:{name:"Section",description:"A container component that divides the layout into sections, with an optional title.",category:"Layout",allowedChildrenTypes:["*"],fields:{title:{name:"Title",init:"Section Title",desc:"Leave blank to hide.",type:t.Text},accentColor:V,primaryTextColor:v,secondaryTextColor:D,containerBackgroundColor:N,containerShadow:$,separatorColor:x,buttonColor:w,buttonTextColor:k,buttonShadow:E,snapMode:{name:"Snap mode",type:t.Text,options:{no:"No",yes:"Yes"},default:"no",init:"no",category:r.Style,desc:"Use as much space as possible without altering the size of the container."},cssClasses:g},previewField:"title"}},O=e.defineComponent({...P,__name:"CustomCoreSection",setup(n){const a=e.inject(u.core),s=e.inject(u.instancePath),c=["laser-toggle"];var p=!1;function i(o,d){c.includes(o)&&(p=d=="yes")}function y(o){const d=o.target.closest("[data-streamsync-id]");var f=a.getComponentById(d.dataset.streamsyncId),_=f.content.customId,I=d.dataset.streamsyncId;return _!=""?_:I}function h(o,d){const f=o.target.nodeName;return d.includes(f)}function l(o){if(o.stopPropagation(),!h(o,["BUTTON"])||p)return;const d=y(o),f=new CustomEvent("click",{detail:{payload:{id:d}}});a.forwardEvent(f,s,!0)}function m(o){if(o.stopPropagation(),!h(o,["INPUT"]))return;const d=y(o),f=o.target.value,_=new CustomEvent("input",{detail:{payload:{id:d,value:f}}});a.forwardEvent(_,s,!0)}function b(o){if(console.log("captureChange event"),o.stopPropagation(),!h(o,["SELECT","INPUT"]))return;const d=y(o),f=o.target.value,_=new CustomEvent("change",{detail:{payload:{id:d,value:f}}});i(d,f),a.forwardEvent(_,s,!0)}const C=e.inject(u.evaluatedFields);return(o,d)=>(e.openBlock(),e.createElementBlock("section",{class:e.normalizeClass(["CoreSection",{snapMode:e.unref(C).snapMode.value=="yes"}]),ref:"rootEl",onClickCapture:l},[e.unref(C).title.value?(e.openBlock(),e.createElementBlock("h2",j,e.toDisplayString(e.unref(C).title.value)+" CUSTOM SECTION",1)):e.createCommentVNode("",!0),e.createElementVNode("div",{"data-streamsync-container":"",onInputCapture:m,onChangeCapture:b},[e.renderSlot(o.$slots,"default",{},void 0,!0)],32)],34))}}),ae="",S=(n,a)=>{const s=n.__vccOpts||n;for(const[c,p]of a)s[c]=p;return s},K=S(O,[["__scopeId","data-v-a22f1e92"]]);function L(n){const a={ctrlKey:n.ctrlKey,shiftKey:n.shiftKey,metaKey:n.metaKey};return new CustomEvent("ss-click",{detail:{payload:a}})}const M=["aria-disabled"],A={streamsync:{name:"Button",description:"A standalone button component that can be linked to a click event handler.",docs:"\nStreamsync uses the library RemixIcon to display icons. To include an icon, check remixicon.com, find the icon's id (such as `arrow-up`) and it to your _Button_.\n",category:"Other",events:{"ss-click":{desc:"Capture single clicks.",stub:`
def handle_button_click(state):

	# Increment counter when the button is clicked

	state["counter"] += 1`.trim()}},fields:{text:{name:"Text",init:"Button Text",type:t.Text},customId:{name:"CustomId",init:"Button CustomId",type:t.Text},isDisabled:{name:"Disabled",default:"no",type:t.Text,options:{yes:"Yes",no:"No"},desc:"Disables all event handlers."},buttonColor:w,buttonTextColor:k,icon:{name:"Icon",type:t.Text,desc:'A RemixIcon id, such as "arrow-up".',category:r.Style},buttonShadow:E,separatorColor:x,cssClasses:g},previewField:"text"}},H=e.defineComponent({...A,__name:"CustomCoreButton",setup(n){const a=e.ref(null),s=e.inject(u.evaluatedFields),c=e.inject(u.isDisabled);e.watch(s.isDisabled,i=>{c.value=i=="yes"},{immediate:!0});function p(i){const y=L(i);a.value.dispatchEvent(y)}return(i,y)=>(e.openBlock(),e.createElementBlock("button",{class:"CoreButton","aria-disabled":e.unref(c),ref_key:"rootEl",ref:a,onClick:p},[e.unref(s).icon.value?(e.openBlock(),e.createElementBlock("i",{key:0,class:e.normalizeClass([`ri-${e.unref(s).icon.value}-line`,`ri-${e.unref(s).icon.value}`])},null,2)):e.createCommentVNode("",!0),e.createTextVNode(" "+e.toDisplayString(e.unref(s).text.value),1)],8,M))}}),ce="",U=S(H,[["__scopeId","data-v-01c4d6aa"]]);function B(n,a,s){const c=e.ref(),p=e.ref(!1),i=e.ref(null),y=e.computed(()=>n.getComponentById(a));function h(l,m,b){var _,I;c.value=l;const C=(_=y.value.handlers)==null?void 0:_[m],o=((I=y.value.binding)==null?void 0:I.eventType)==m;if(!C&&!o)return;if(p.value){i.value={eventValue:l,emitEventType:m};return}p.value=!0;const d=()=>{p.value=!1,i.value&&(h(i.value.eventValue,i.value.emitEventType),i.value=null),b==null||b()},f=new CustomEvent(m,{detail:{payload:l,callback:d}});s.value.dispatchEvent(f)}return e.watch(()=>n.getBindingValue(a),l=>{p.value||(c.value=l)},{immediate:!0}),e.watch(c,l=>{typeof l>"u"&&(c.value="")},{immediate:!0}),{formValue:c,handleInput:h}}const Y={class:"mainLabel"},z={class:"selectContainer"},q=["value"],F=["value"],G="A user input component that allows users to select a single value from a list of options using a dropdown menu.",J={a:"Option A",b:"Option B"},R=`
def onchange_handler(state, payload):

	# Set the state variable "selected" to the selected option

	state["selected"] = payload`,Q={streamsync:{name:"Dropdown Input",description:G,category:"Input",fields:{label:{name:"Label",init:"Input Label",type:t.Text},customId:{name:"CustomId",init:"Dropdown CustomId",type:t.Text},options:{name:"Options",desc:"Key-value object with options. Must be a JSON string or a state reference to a dictionary.",type:t.KeyValue,default:JSON.stringify(J,null,2)},cssClasses:g},events:{"ss-option-change":{desc:"Sent when the selected option changes.",stub:R.trim(),bindable:!0}}}},W=e.defineComponent({...Q,__name:"CoreDropdownInput",setup(n){const a=e.inject(u.evaluatedFields),s=e.ref(null),c=e.inject(u.core),p=e.inject(u.componentId),{formValue:i,handleInput:y}=B(c,p,s);return(h,l)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreDropdownInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",Y,e.toDisplayString(e.unref(a).label.value),1),e.createElementVNode("div",z,[e.createElementVNode("select",{value:e.unref(i),onInput:l[0]||(l[0]=m=>e.unref(y)(m.target.value,"ss-option-change"))},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(e.unref(a).options.value,(m,b)=>(e.openBlock(),e.createElementBlock("option",{key:b,value:b},e.toDisplayString(m),9,F))),128))],40,q)])],512))}}),ie="",X=S(W,[["__scopeId","data-v-4bb976b5"]]),Z=["type","value","placeholder"],ee="A user input component that allows users to enter single-line text values.",T=`
def onchange_handler(state, payload):

	# Set the state variable "new_val" to the new value

	state["new_val"] = payload`,te={streamsync:{name:"Text Input",description:ee,category:"Input",fields:{label:{name:"Label",init:"Input Label",type:t.Text},customId:{name:"CustomId",init:"Input CustomId",type:t.Text},placeholder:{name:"Placeholder",type:t.Text},passwordMode:{name:"Password mode",default:"no",type:t.Text,options:{no:"No",yes:"Yes"},category:r.Style},cssClasses:g},events:{"ss-change":{desc:"Capture changes as they happen.",stub:T,bindable:!0},"ss-change-finish":{desc:"Capture changes once this control has lost focus.",stub:T}}}},ne=e.defineComponent({...te,__name:"CoreTextInput",setup(n){const a=e.inject(u.evaluatedFields),s=e.ref(null),c=e.inject(u.core),p=e.inject(u.componentId),{formValue:i,handleInput:y}=B(c,p,s);return(h,l)=>(e.openBlock(),e.createElementBlock("div",{class:"CoreTextInput",ref_key:"rootEl",ref:s},[e.createElementVNode("label",null,e.toDisplayString(e.unref(a).label.value),1),e.createElementVNode("input",{type:e.unref(a).passwordMode.value=="yes"?"password":"text",value:e.unref(i),onInput:l[0]||(l[0]=m=>e.unref(y)(m.target.value,"ss-change")),onChange:l[1]||(l[1]=m=>e.unref(y)(m.target.value,"ss-change-finish")),placeholder:e.unref(a).placeholder.value,"aria-autocomplete":"none"},null,40,Z)],512))}}),de="";return{customsection:K,custombutton:U,customdropdown:X,customtextinput:S(ne,[["__scopeId","data-v-62fee226"]])}});
